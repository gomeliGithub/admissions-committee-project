datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

generator client {
    provider             = "prisma-client-py"
    interface            = "asyncio"
    recursive_type_depth = 5
}

model Applicant {
    id                       Int                               @id @default(autoincrement())
    fullName                 String
    graduatedInstitutions    Json
    medal                    Boolean                           @default(false)
    enrolled                 Boolean                           @default(false)
    createDate               DateTime                          @default(now())
    updateDate               DateTime?
    study_group              Study_group?
    examination_sheet        Examination_sheet?
    department               Department                        @relation(fields: [departmentId], references: [id])
    departmentId             Int
    faculty                  Faculty                           @relation(fields: [facultyId], references: [id])
    facultyId                Int
}

model Study_group {
    id                       Int                               @id @default(autoincrement())
    title                    String                            @unique
    applicant                Applicant?                        @relation(fields: [applicantId], references: [id])
    applicantId              Int?                              @unique
    exams                    Exam[]
}

model Examination_sheet {
    id                       Int                               @id @default(autoincrement())
    russianLanguage          Int                               @default(0)
    belarusianLanguage       Int                               @default(0) 
    foreignLanguage          Int                               @default(0)
    worldHistory             Int                               @default(0)
    belarusHistory           Int                               @default(0)
    greatPatrioticWarHistory Int                               @default(0)
    socialStudies            Int                               @default(0)
    socialScience            Int                               @default(0)
    mathematics              Int                               @default(0)
    createDate               DateTime                          @default(now())
    applicant                Applicant                         @relation(fields: [applicantId], references: [id])
    applicantId              Int                               @unique
}

model Faculty {
    id                       Int                               @id @default(autoincrement())
    title                    String                            @unique
    passingScore             Int                               @default(0)
    applicants               Applicant[]   
    departments              Department[]
    specialties              Specialty[]       
}

model Department {
    id                       Int                               @id @default(autoincrement())
    title                    String                            @unique
    placesNumber             Int                               @default(0)
    passingScore             Int                               @default(0)
    studentsAreShortage      Boolean                           @default(false)
    applicants               Applicant[]                    
    faculty                  Faculty                           @relation(fields: [facultyId], references: [id])
    facultyId                Int
}

model Exam {
    id                       Int                               @id @default(autoincrement())
    isConsultation           Boolean                           @default(false)
    conductingDate           DateTime
    classroom                String
    study_group              Study_group?                      @relation(fields: [study_groupId], references: [id])
    study_groupId            Int?
}

model Specialty {
    id                       Int                               @id @default(autoincrement())
    passingScore             Int                               @default(0)
    competition              Int                               @default(0)
    title                    String                            @db.VarChar(255) @unique
    faculty                  Faculty?                          @relation(fields: [facultyId], references: [id])
    facultyId                Int?
}

model Admissions_committee_secretary {
    id                       Int                               @id @default(autoincrement())
    login                    String                            @unique
    password                 String
    lastSignInDate           DateTime?
}

model JWT_token {
    jwt_hash                 String                            @id
    issued_date              DateTime                          @default(now())
    expires_date             DateTime
    revokation_date          DateTime
    revoked                  Boolean                           @default(false)
}